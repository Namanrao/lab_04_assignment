class Flight:
    def __init__(self, flight_id, origin, destination, price):
        self.flight_id = flight_id
        self.origin = origin
        self.destination = destination
        self.price = price

class FlightTable:
    def __init__(self):
        self.flights = []

    def add_flight(self, flight):
        self.flights.append(flight)

    def search_by_city(self, city):
        results = []
        for flight in self.flights:
            if flight.origin == city or flight.destination == city:
                results.append(flight)
        return results

    def search_by_origin(self, origin):
        results = []
        for flight in self.flights:
            if flight.origin == origin:
                results.append(flight)
        return results

    def search_between_cities(self, origin, destination):
        results = []
        for flight in self.flights:
            if flight.origin == origin and flight.destination == destination:
                results.append(flight)
        return results

def main():
    flight_table = FlightTable()

    flight_data = [
        ("AI161E90", "BLR", "BOM", 5600),
        ("BR161F91", "BOM", "BBI", 6750),
        ("AI161F99", "BBI", "BLR", 8210),
        ("VS171E20", "JLR", "BBI", 5500),
        ("AS171G30", "HYD", "JLR", 4400),
        ("AI131F49", "HYD", "BOM", 3499)
    ]

    for data in flight_data:
        flight = Flight(*data)
        flight_table.add_flight(flight)

    cities = {
        "BLR": "Bengaluru",
        "BOM": "Mumbai",
        "BBI": "Bhubaneswar",
        "HYD": "Hyderabad",
        "JLR": "Jabalpur"
    }

    print("Search Options:")
    print("1. Flights for a particular City")
    print("2. Flights From a city")
    print("3. Flights between two given cities")

    choice = int(input("Enter your choice: "))

    name = "Naman Rao Ghorpade"
    enrollment_number = "E22CSEU1133"

    if choice == 1:
        city_code = input("Enter the city code: ").upper()
        results = flight_table.search_by_city(city_code)
        for flight in results:
            print(f"Flight {flight.flight_id}: From {cities[flight.origin]} to {cities[flight.destination]} - Price: {flight.price}")
            print(f"Name: {name}, Enrollment Number: {enrollment_number}")
    
    elif choice == 2:
        origin_code = input("Enter the origin city code: ").upper()
        results = flight_table.search_by_origin(origin_code)
        for flight in results:
            print(f"Flight {flight.flight_id}: From {cities[flight.origin]} to {cities[flight.destination]} - Price: {flight.price}")
            print(f"Name: {name}, Enrollment Number: {enrollment_number}")

    elif choice == 3:
        origin_code = input("Enter the origin city code: ").upper()
        destination_code = input("Enter the destination city code: ").upper()
        results = flight_table.search_between_cities(origin_code, destination_code)
        for flight in results:
            print(f"Flight {flight.flight_id}: From {cities[flight.origin]} to {cities[flight.destination]} - Price: {flight.price}")
            print(f"Name: {name}, Enrollment Number: {enrollment_number}")
    
    else:
        print("Invalid choice!")

if __name__ == "__main__":
    main()
